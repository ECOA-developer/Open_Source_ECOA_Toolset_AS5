//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.8-b130911.1802 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2016.07.20 at 08:12:06 AM BST 
//

package com.iawg.ecoa.jaxbclasses.step4aCompImpl;

import java.util.ArrayList;
import java.util.List;

import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlAttribute;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlElements;
import javax.xml.bind.annotation.XmlRootElement;
import javax.xml.bind.annotation.XmlType;

/**
 * 
 * Describes all the information needed to integrate the software implementation
 * of an ECOA component in an ECOA system.
 * 
 * 
 * <p>
 * Java class for ComponentImplementation complex type.
 * 
 * <p>
 * The following schema fragment specifies the expected content contained within
 * this class.
 * 
 * <pre>
 * &lt;complexType name="ComponentImplementation">
 *   &lt;complexContent>
 *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *       &lt;sequence>
 *         &lt;element ref="{http://www.ecoa.technology/implementation-1.0}use" maxOccurs="unbounded" minOccurs="0"/>
 *         &lt;element name="service" type="{http://www.ecoa.technology/implementation-1.0}ServiceQoS" maxOccurs="unbounded" minOccurs="0"/>
 *         &lt;element name="reference" type="{http://www.ecoa.technology/implementation-1.0}ServiceQoS" maxOccurs="unbounded" minOccurs="0"/>
 *         &lt;element name="moduleType" type="{http://www.ecoa.technology/implementation-1.0}ModuleType" maxOccurs="unbounded" minOccurs="0"/>
 *         &lt;element name="moduleImplementation" type="{http://www.ecoa.technology/implementation-1.0}ModuleImplementation" maxOccurs="unbounded" minOccurs="0"/>
 *         &lt;element name="moduleInstance" type="{http://www.ecoa.technology/implementation-1.0}ModuleInstance" maxOccurs="unbounded" minOccurs="0"/>
 *         &lt;element name="triggerInstance" type="{http://www.ecoa.technology/implementation-1.0}TriggerInstance" maxOccurs="unbounded" minOccurs="0"/>
 *         &lt;element name="dynamicTriggerInstance" type="{http://www.ecoa.technology/implementation-1.0}DynamicTriggerInstance" maxOccurs="unbounded" minOccurs="0"/>
 *         &lt;choice maxOccurs="unbounded">
 *           &lt;element name="dataLink" type="{http://www.ecoa.technology/implementation-1.0}DataLink" maxOccurs="unbounded" minOccurs="0"/>
 *           &lt;element name="eventLink" type="{http://www.ecoa.technology/implementation-1.0}EventLink" maxOccurs="unbounded" minOccurs="0"/>
 *           &lt;element name="requestLink" type="{http://www.ecoa.technology/implementation-1.0}RequestLink" maxOccurs="unbounded" minOccurs="0"/>
 *         &lt;/choice>
 *       &lt;/sequence>
 *       &lt;attribute name="componentDefinition" use="required" type="{http://www.ecoa.technology/implementation-1.0}NameId" />
 *     &lt;/restriction>
 *   &lt;/complexContent>
 * &lt;/complexType>
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "ComponentImplementation", propOrder = { "uses", "services", "references", "moduleTypes", "moduleImplementations", "moduleInstances", "triggerInstances", "dynamicTriggerInstances", "dataLinksAndEventLinksAndRequestLinks" })
@XmlRootElement(name = "componentImplementation")
public class ComponentImplementation {

	@XmlElement(name = "use")
	protected List<Use> uses;
	@XmlElement(name = "service")
	protected List<ServiceQoS> services;
	@XmlElement(name = "reference")
	protected List<ServiceQoS> references;
	@XmlElement(name = "moduleType")
	protected List<ModuleType> moduleTypes;
	@XmlElement(name = "moduleImplementation")
	protected List<ModuleImplementation> moduleImplementations;
	@XmlElement(name = "moduleInstance")
	protected List<ModuleInstance> moduleInstances;
	@XmlElement(name = "triggerInstance")
	protected List<TriggerInstance> triggerInstances;
	@XmlElement(name = "dynamicTriggerInstance")
	protected List<DynamicTriggerInstance> dynamicTriggerInstances;
	@XmlElements({ @XmlElement(name = "dataLink", type = DataLink.class), @XmlElement(name = "eventLink", type = EventLink.class), @XmlElement(name = "requestLink", type = RequestLink.class) })
	protected List<Object> dataLinksAndEventLinksAndRequestLinks;
	@XmlAttribute(name = "componentDefinition", required = true)
	protected String componentDefinition;

	/**
	 * Gets the value of the uses property.
	 * 
	 * <p>
	 * This accessor method returns a reference to the live list, not a
	 * snapshot. Therefore any modification you make to the returned list will
	 * be present inside the JAXB object. This is why there is not a
	 * <CODE>set</CODE> method for the uses property.
	 * 
	 * <p>
	 * For example, to add a new item, do as follows:
	 * 
	 * <pre>
	 * getUses().add(newItem);
	 * </pre>
	 * 
	 * 
	 * <p>
	 * Objects of the following type(s) are allowed in the list {@link Use }
	 * 
	 * 
	 */
	public List<Use> getUses() {
		if (uses == null) {
			uses = new ArrayList<Use>();
		}
		return this.uses;
	}

	/**
	 * Gets the value of the services property.
	 * 
	 * <p>
	 * This accessor method returns a reference to the live list, not a
	 * snapshot. Therefore any modification you make to the returned list will
	 * be present inside the JAXB object. This is why there is not a
	 * <CODE>set</CODE> method for the services property.
	 * 
	 * <p>
	 * For example, to add a new item, do as follows:
	 * 
	 * <pre>
	 * getServices().add(newItem);
	 * </pre>
	 * 
	 * 
	 * <p>
	 * Objects of the following type(s) are allowed in the list
	 * {@link ServiceQoS }
	 * 
	 * 
	 */
	public List<ServiceQoS> getServices() {
		if (services == null) {
			services = new ArrayList<ServiceQoS>();
		}
		return this.services;
	}

	/**
	 * Gets the value of the references property.
	 * 
	 * <p>
	 * This accessor method returns a reference to the live list, not a
	 * snapshot. Therefore any modification you make to the returned list will
	 * be present inside the JAXB object. This is why there is not a
	 * <CODE>set</CODE> method for the references property.
	 * 
	 * <p>
	 * For example, to add a new item, do as follows:
	 * 
	 * <pre>
	 * getReferences().add(newItem);
	 * </pre>
	 * 
	 * 
	 * <p>
	 * Objects of the following type(s) are allowed in the list
	 * {@link ServiceQoS }
	 * 
	 * 
	 */
	public List<ServiceQoS> getReferences() {
		if (references == null) {
			references = new ArrayList<ServiceQoS>();
		}
		return this.references;
	}

	/**
	 * Gets the value of the moduleTypes property.
	 * 
	 * <p>
	 * This accessor method returns a reference to the live list, not a
	 * snapshot. Therefore any modification you make to the returned list will
	 * be present inside the JAXB object. This is why there is not a
	 * <CODE>set</CODE> method for the moduleTypes property.
	 * 
	 * <p>
	 * For example, to add a new item, do as follows:
	 * 
	 * <pre>
	 * getModuleTypes().add(newItem);
	 * </pre>
	 * 
	 * 
	 * <p>
	 * Objects of the following type(s) are allowed in the list
	 * {@link ModuleType }
	 * 
	 * 
	 */
	public List<ModuleType> getModuleTypes() {
		if (moduleTypes == null) {
			moduleTypes = new ArrayList<ModuleType>();
		}
		return this.moduleTypes;
	}

	/**
	 * Gets the value of the moduleImplementations property.
	 * 
	 * <p>
	 * This accessor method returns a reference to the live list, not a
	 * snapshot. Therefore any modification you make to the returned list will
	 * be present inside the JAXB object. This is why there is not a
	 * <CODE>set</CODE> method for the moduleImplementations property.
	 * 
	 * <p>
	 * For example, to add a new item, do as follows:
	 * 
	 * <pre>
	 * getModuleImplementations().add(newItem);
	 * </pre>
	 * 
	 * 
	 * <p>
	 * Objects of the following type(s) are allowed in the list
	 * {@link ModuleImplementation }
	 * 
	 * 
	 */
	public List<ModuleImplementation> getModuleImplementations() {
		if (moduleImplementations == null) {
			moduleImplementations = new ArrayList<ModuleImplementation>();
		}
		return this.moduleImplementations;
	}

	/**
	 * Gets the value of the moduleInstances property.
	 * 
	 * <p>
	 * This accessor method returns a reference to the live list, not a
	 * snapshot. Therefore any modification you make to the returned list will
	 * be present inside the JAXB object. This is why there is not a
	 * <CODE>set</CODE> method for the moduleInstances property.
	 * 
	 * <p>
	 * For example, to add a new item, do as follows:
	 * 
	 * <pre>
	 * getModuleInstances().add(newItem);
	 * </pre>
	 * 
	 * 
	 * <p>
	 * Objects of the following type(s) are allowed in the list
	 * {@link ModuleInstance }
	 * 
	 * 
	 */
	public List<ModuleInstance> getModuleInstances() {
		if (moduleInstances == null) {
			moduleInstances = new ArrayList<ModuleInstance>();
		}
		return this.moduleInstances;
	}

	/**
	 * Gets the value of the triggerInstances property.
	 * 
	 * <p>
	 * This accessor method returns a reference to the live list, not a
	 * snapshot. Therefore any modification you make to the returned list will
	 * be present inside the JAXB object. This is why there is not a
	 * <CODE>set</CODE> method for the triggerInstances property.
	 * 
	 * <p>
	 * For example, to add a new item, do as follows:
	 * 
	 * <pre>
	 * getTriggerInstances().add(newItem);
	 * </pre>
	 * 
	 * 
	 * <p>
	 * Objects of the following type(s) are allowed in the list
	 * {@link TriggerInstance }
	 * 
	 * 
	 */
	public List<TriggerInstance> getTriggerInstances() {
		if (triggerInstances == null) {
			triggerInstances = new ArrayList<TriggerInstance>();
		}
		return this.triggerInstances;
	}

	/**
	 * Gets the value of the dynamicTriggerInstances property.
	 * 
	 * <p>
	 * This accessor method returns a reference to the live list, not a
	 * snapshot. Therefore any modification you make to the returned list will
	 * be present inside the JAXB object. This is why there is not a
	 * <CODE>set</CODE> method for the dynamicTriggerInstances property.
	 * 
	 * <p>
	 * For example, to add a new item, do as follows:
	 * 
	 * <pre>
	 * getDynamicTriggerInstances().add(newItem);
	 * </pre>
	 * 
	 * 
	 * <p>
	 * Objects of the following type(s) are allowed in the list
	 * {@link DynamicTriggerInstance }
	 * 
	 * 
	 */
	public List<DynamicTriggerInstance> getDynamicTriggerInstances() {
		if (dynamicTriggerInstances == null) {
			dynamicTriggerInstances = new ArrayList<DynamicTriggerInstance>();
		}
		return this.dynamicTriggerInstances;
	}

	/**
	 * Gets the value of the dataLinksAndEventLinksAndRequestLinks property.
	 * 
	 * <p>
	 * This accessor method returns a reference to the live list, not a
	 * snapshot. Therefore any modification you make to the returned list will
	 * be present inside the JAXB object. This is why there is not a
	 * <CODE>set</CODE> method for the dataLinksAndEventLinksAndRequestLinks
	 * property.
	 * 
	 * <p>
	 * For example, to add a new item, do as follows:
	 * 
	 * <pre>
	 * getDataLinksAndEventLinksAndRequestLinks().add(newItem);
	 * </pre>
	 * 
	 * 
	 * <p>
	 * Objects of the following type(s) are allowed in the list {@link DataLink
	 * } {@link EventLink } {@link RequestLink }
	 * 
	 * 
	 */
	public List<Object> getDataLinksAndEventLinksAndRequestLinks() {
		if (dataLinksAndEventLinksAndRequestLinks == null) {
			dataLinksAndEventLinksAndRequestLinks = new ArrayList<Object>();
		}
		return this.dataLinksAndEventLinksAndRequestLinks;
	}

	/**
	 * Gets the value of the componentDefinition property.
	 * 
	 * @return possible object is {@link String }
	 * 
	 */
	public String getComponentDefinition() {
		return componentDefinition;
	}

	/**
	 * Sets the value of the componentDefinition property.
	 * 
	 * @param value
	 *            allowed object is {@link String }
	 * 
	 */
	public void setComponentDefinition(String value) {
		this.componentDefinition = value;
	}

}
